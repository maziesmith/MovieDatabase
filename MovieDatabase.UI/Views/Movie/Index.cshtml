@using MovieDatabase.BL.Domain
@model IEnumerable<MovieDatabase.BL.Domain.Media>

@{
    ViewBag.Title = "title";
    Layout = "_Layout";
}

<h2>Bekeken films</h2>

<form asp-controller="Movie" asp-action="Index">
    <p>
        Title: <input type="text" name="SearchString">
        <input type="submit" value="Filter"/>
    </p>
</form>

<table class="table">
    <tr>
        <td>Nr</td>
        <td>Titel</td>
        <td>Type</td>
        <td>Datum bekeken</td>
        <td>Acteur 1</td>
        <td>Acteur 2</td>
        <td>Acteur 3</td>
        <td></td>
    </tr>
    @foreach (var item in Model)
    {
        string name1 = "";
        string name2 = "";
        string name3 = "";
        string shortDate = "";
        if (item.WatchDate != null)
        {
            shortDate = item.WatchDate.Value.ToShortDateString();
        }
        try
        {
            List<ActorAct> actorActs = item.ActorActs.ToList();
            name1 = actorActs.ElementAt(0).Actor.Name;
            name2 = actorActs.ElementAt(1).Actor.Name;
            name3 = actorActs.ElementAt(2).Actor.Name;
        }
        catch (ArgumentOutOfRangeException e)
        {
            // do nothing
        }
        catch (ArgumentNullException e2)
        {
            // do nothing
        }
        var detailMethod = item.MediaType == MediaType.Movie ? "DetailMovie" : "DetailSeries";
        var editMethod = item.MediaType == MediaType.Movie ? "EditMovie" : "EditSeries";
        <tr>
            <td>@Html.DisplayFor(media => item.Id)</td>
            <td>@Html.ActionLink(item.Title, detailMethod, "Movie", new {id = item.Id})</td>
            <td>@item.MediaType.MediaTypeToString()</td>
            <td>@shortDate</td>
            <td>@name1</td>
            <td>@name2</td>
            <td>@name3</td>
            <td>
                @Html.ActionLink("Bewerken", editMethod, "Movie", new {id = item.Id}) |
                @Html.ActionLink("Delete", "DeleteMedia", "Movie", new {id = item.Id})
            </td>
        </tr>
    }
</table>